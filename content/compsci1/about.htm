<div class="col-md-12"><h3><a href="/guidelines">Class Guidelines</a></h3></div>


                <div class="col-md-3">
                    <h3>Objectives</h3>

                    <ul>
                        <li>Understand and be able to develop complete
                        applications that adhere to the Object Oriented
                        paradigm</li>

                        <li>Understand the efficiency of algorithms as pertains
                        to their order of growth (Big-O)</li>

                        <li>Understand and be able to analyze various sorting
                        and searching algorithms</li>

                        <li>Develop and evaluate recursive processes</li>

                        <li>Understand the concept of Abstract Data Types</li>

                        <li>Understand and be able to implement various data
                        structures including stacks, queues, linked lists,
                        heaps, priority queues, binary trees, sets, maps and
                        expression trees</li>
                    </ul>
                </div>

                

                <div class="col-md-6">
                    <h3>Course Outline</h3>

                    <ol>
                        <li>
                            <h5>Java and Memory</h5>

                            <p>Understand how Java utilizes the computers
                            memory heap and how it relates to dynamic memory
                            allocation</p>
                        </li>

                        <li>
                            <h5>Java API & AP Subset Java Classes</h5>

                            <p>Learn how to navigate Java class documentation
                            and examine the list of Java Classes required by
                            the AP AB Java subset</p>
                        </li>

                        <li>
                            <h5>Advanced Classes</h5>

                            <ul>
                                <li>Systems, design a set of interacting
                                classes</li>

                                <li>Cohesion and Coupling</li>

                                <li>Class Invariants</li>

                                <li>Is a Vs Has a</li>

                                <li>Decompose a problem into classes with
                                relationships and responsibilities</li>

                                <li>Clearly Defined Classes</li>

                                <li>This</li>

                                <li>Read and understand class hierarchies</li>

                                <li>Using Interface as an argument</li>

                                <li>Calling Super (and in constructor of sub
                                calling parents constructor)</li>

                                <li>Access Control</li>

                                <li>Overloading</li>

                                <li>Overriding</li>

                                <li>Converting from sub to super reference
                                without having to cast</li>
                            </ul>

                            <p> </p>
                        </li>

                        <li>
                            <h5>Arrays and ArrayList</h5>

                            <p>Work with the Java ArrayList class and learn
                            about list interface</p>
                        </li>

                        <li>
                            <h5>Exception Handling</h5>

                            <p>Understand Runtime exceptions, throw several run
                            time exceptions and understand but not implement
                            try/throw/catch.</p>
                        </li>

                        <li>
                            <h5>Algorithms</h5>

                            <p>Bubble Sort , Selection Sort, Sequential Search,
                            Binary Search, Intro to Big-O</p>
                        </li>

                        <li>
                            <h5>Big-O</h5>

                            <p>Understand theoretical efficiency from constant
                            to exponential growth</p>
                        </li>

                        <li>
                            <h5>Recursion</h5>

                            <p>Design algorithms that recall a method</p>
                        </li>

                        <li>
                            <h5>Abstract Data Types (ADT's)</h5>

                            <p>Identify the concept and requirements for
                            various ADT's</p>
                        </li>

                        <li>
                            <h5>Data Structures</h5>

                            <p>Stacks, Queues, Lists, Sets, Maps, Hashing,
                            Priority Queues, Binary Trees, and Linked
                            Lists.</p>
                        </li>

                        <li>
                            <h5>Sorting</h5>

                            <p>Selection, Insertion, MergeSort, QuickSort, and
                            HeapSort</p>
                        </li>

                        <li>
                            <h5>Expression Trees</h5>
                        </li>

                        <li>
                            <h5>Testing and Debugging</h5>
                        </li>
                    </ol>
                </div>
                
                <div class="col-md-3">
                    <h3>Suplementary Texts and Resources</h3>

                    <ul>
                        <li>Barrons AP Review Book</li>

                        <li>Java Essentials, Horstman</li>

                        <li>Java Essentials Study Guide, Horstman and
                        Trees</li>

                        <li>Big Java, Horstman</li>

                        <li>JAVA2 How to Program, Deitel & Deitel</li>

                        <li>Java Methods , Litvin</li>

                        <li>Fundanentals of Java – Comprehensive, Lambert &
                        Osborne</li>

                        <li>Java Java Java , Morelli</li>

                        <li>Java Programming, King</li>

                        <li>Java 2 By Example, Que</li>

                        <li>AP AB Java Course Description</li>
                    </ul>
                </div>